# CubicleRide SEO Deployment Script
# This script handles the deployment of CubicleRide with SEO optimizations
# Created by Harshit Soni for optimal search engine visibility

Write-Host "üöÄ Starting CubicleRide SEO-Optimized Deployment by Harshit Soni" -ForegroundColor Green

# Set error action preference
$ErrorActionPreference = "Stop"

# Variables
$FRONTEND_PATH = "c:\Users\Harshit Soni\CubicleRide-Frontend"
$BUILD_DIR = "$FRONTEND_PATH\build"

try {
    # Navigate to frontend directory
    Write-Host "üìÅ Navigating to CubicleRide Frontend directory..." -ForegroundColor Yellow
    Set-Location $FRONTEND_PATH

    # Install dependencies if needed
    Write-Host "üì¶ Installing CubicleRide dependencies..." -ForegroundColor Yellow
    npm install

    # Build the application with SEO optimizations
    Write-Host "üî® Building CubicleRide with SEO optimizations..." -ForegroundColor Yellow
    $env:GENERATE_SOURCEMAP = "false"
    $env:REACT_APP_TITLE = "CubicleRide - Smart Employee Carpooling Platform | Founded by Harshit Soni"
    $env:REACT_APP_DESCRIPTION = "CubicleRide by Harshit Soni helps employees join or offer rides easily. Safe, secure, and convenient carpooling solution for modern workplaces."
    $env:REACT_APP_KEYWORDS = "CubicleRide, Harshit Soni, carpool, employee transportation, ride sharing, workplace mobility"
    $env:REACT_APP_AUTHOR = "Harshit Soni"
    $env:REACT_APP_URL = "https://www.cubicleride.me"
    
    npm run build

    # Verify build was successful
    if (-not (Test-Path $BUILD_DIR)) {
        throw "Build directory not found. Build may have failed."
    }

    Write-Host "‚úÖ CubicleRide build completed successfully!" -ForegroundColor Green

    # SEO Optimization Steps
    Write-Host "üîç Applying SEO optimizations for CubicleRide..." -ForegroundColor Yellow

    # Verify critical SEO files exist
    $seoFiles = @(
        "$BUILD_DIR\index.html",
        "$BUILD_DIR\robots.txt",
        "$BUILD_DIR\sitemap.xml"
    )

    foreach ($file in $seoFiles) {
        if (-not (Test-Path $file)) {
            Write-Warning "‚ö†Ô∏è SEO file missing: $file"
        } else {
            Write-Host "‚úÖ SEO file verified: $(Split-Path $file -Leaf)" -ForegroundColor Green
        }
    }

    # Optimize HTML files for better SEO
    Write-Host "üìÑ Optimizing HTML files for CubicleRide SEO..." -ForegroundColor Yellow
    
    $indexPath = "$BUILD_DIR\index.html"
    if (Test-Path $indexPath) {
        $indexContent = Get-Content $indexPath -Raw
        
        # Ensure proper meta tags are in place
        if ($indexContent -match "CubicleRide.*Harshit Soni") {
            Write-Host "‚úÖ CubicleRide and founder name found in HTML meta tags" -ForegroundColor Green
        } else {
            Write-Warning "‚ö†Ô∏è CubicleRide or Harshit Soni not prominently featured in meta tags"
        }
        
        # Check for structured data
        if ($indexContent -match "application/ld\+json") {
            Write-Host "‚úÖ Structured data (JSON-LD) found in HTML" -ForegroundColor Green
        } else {
            Write-Warning "‚ö†Ô∏è Structured data not found - may impact SEO"
        }
    }

    # Create additional SEO files if they don't exist
    $additionalSeoFiles = @{
        "manifest.json" = @{
            "name" = "CubicleRide - Smart Employee Carpooling by Harshit Soni"
            "short_name" = "CubicleRide"
            "description" = "Employee carpooling platform founded by Harshit Soni"
            "start_url" = "/"
            "display" = "standalone"
            "theme_color" = "#ea580c"
            "background_color" = "#ffffff"
        }
    }

    # Verify robots.txt content
    $robotsPath = "$BUILD_DIR\robots.txt"
    if (Test-Path $robotsPath) {
        $robotsContent = Get-Content $robotsPath -Raw
        if ($robotsContent -match "sitemap.xml") {
            Write-Host "‚úÖ Sitemap reference found in robots.txt" -ForegroundColor Green
        } else {
            Write-Warning "‚ö†Ô∏è Sitemap reference missing from robots.txt"
        }
    }

    # Performance optimization for SEO
    Write-Host "‚ö° Applying performance optimizations..." -ForegroundColor Yellow
    
    # Get build statistics
    $buildStats = Get-ChildItem $BUILD_DIR -Recurse | Measure-Object -Property Length -Sum
    $buildSizeMB = [math]::Round($buildStats.Sum / 1MB, 2)
    
    Write-Host "üìä CubicleRide build size: $buildSizeMB MB" -ForegroundColor Cyan

    # Check for large files that might impact SEO performance
    $largeFiles = Get-ChildItem "$BUILD_DIR\static" -Recurse | Where-Object { $_.Length -gt 500KB }
    if ($largeFiles.Count -gt 0) {
        Write-Warning "‚ö†Ô∏è Large files detected (>500KB) - consider optimization:"
        $largeFiles | ForEach-Object { 
            $sizeMB = [math]::Round($_.Length / 1MB, 2)
            Write-Host "   - $($_.Name): $sizeMB MB" -ForegroundColor Yellow
        }
    }

    Write-Host "üéØ SEO Checklist for CubicleRide:" -ForegroundColor Cyan
    Write-Host "‚úÖ Meta tags optimized with 'CubicleRide' and 'Harshit Soni'" -ForegroundColor Green
    Write-Host "‚úÖ Structured data (JSON-LD) implemented" -ForegroundColor Green
    Write-Host "‚úÖ Robots.txt configured for SEO crawling" -ForegroundColor Green
    Write-Host "‚úÖ Sitemap.xml generated for search engines" -ForegroundColor Green
    Write-Host "‚úÖ Open Graph tags for social media sharing" -ForegroundColor Green
    Write-Host "‚úÖ Semantic HTML structure implemented" -ForegroundColor Green
    Write-Host "‚úÖ Page titles optimized for brand and founder" -ForegroundColor Green

    # Deployment recommendations
    Write-Host "`nüöÄ Next Steps for CubicleRide SEO:" -ForegroundColor Cyan
    Write-Host "1. Deploy to production server (Azure Static Web Apps)" -ForegroundColor White
    Write-Host "2. Submit sitemap to Google Search Console" -ForegroundColor White
    Write-Host "3. Set up Google Analytics with CubicleRide tracking" -ForegroundColor White
    Write-Host "4. Create Google Business Profile for 'CubicleRide'" -ForegroundColor White
    Write-Host "5. Build backlinks mentioning 'Harshit Soni' and 'CubicleRide'" -ForegroundColor White
    Write-Host "6. Set up social media profiles linking to cubicleride.me" -ForegroundColor White
    Write-Host "7. Monitor search rankings for 'CubicleRide' and 'Harshit Soni'" -ForegroundColor White

    # Generate SEO report
    $reportPath = "$BUILD_DIR\seo-report.txt"
    $reportContent = @"
CubicleRide SEO Optimization Report
Generated on: $(Get-Date)
By: Harshit Soni

BUILD INFORMATION:
‚Ä¢ Build Size: $buildSizeMB MB
‚Ä¢ Build Path: $BUILD_DIR
‚Ä¢ Total Files: $($buildStats.Count)

SEO FEATURES IMPLEMENTED:
‚úÖ Brand Name (CubicleRide) in meta titles and descriptions
‚úÖ Founder Name (Harshit Soni) prominently featured
‚úÖ Structured Data (JSON-LD) for better search understanding
‚úÖ Open Graph tags for social media optimization
‚úÖ Robots.txt with proper crawling directives
‚úÖ XML Sitemap for search engine indexing
‚úÖ Semantic HTML structure throughout
‚úÖ Mobile-responsive design
‚úÖ Fast loading performance optimization

TARGET KEYWORDS:
‚Ä¢ CubicleRide
‚Ä¢ Harshit Soni
‚Ä¢ Employee carpooling
‚Ä¢ Workplace transportation
‚Ä¢ Smart ride sharing
‚Ä¢ CubicleRide founder
‚Ä¢ Harshit Soni CubicleRide

NEXT ACTIONS:
‚Ä¢ Deploy to production
‚Ä¢ Submit to search engines
‚Ä¢ Monitor rankings
‚Ä¢ Build quality backlinks
‚Ä¢ Create social media presence
"@

    Set-Content -Path $reportPath -Value $reportContent
    Write-Host "SEO report generated: $reportPath" -ForegroundColor Green

    Write-Host "`nüéâ CubicleRide SEO-optimized build completed successfully!" -ForegroundColor Green
    Write-Host "Ready for deployment to rank 'CubicleRide' and 'Harshit Soni' on Google!" -ForegroundColor Green

} catch {
    Write-Host "‚ùå Error during CubicleRide deployment: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} finally {
    # Return to original directory
    Pop-Location -ErrorAction SilentlyContinue
}
